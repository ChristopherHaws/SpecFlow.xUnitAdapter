<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" >
  <ItemGroup>
    <AvailableItemName Include="SpecFlowFeature" />
    <AvailableItemName Include="SpecFlowEmbeddedFeature" />
  </ItemGroup>

  <PropertyGroup>
    <SpecFlowIntermediateOutputPath>$([System.IO.Path]::Combine('$(ProjectDir)','$(IntermediateOutputPath)SpecFlow'))</SpecFlowIntermediateOutputPath>
  </PropertyGroup>
  
  <!--
  Executes AppendSpecFlowSourceMap for embedded and non-embedded SpecFlowFeature files.
  
  - Embedded files are coppied to the obj\SpecFlow directory and added to the EmbeddedResource item group
  - Non-embedded files are coppied directly to the target directory
  -->
  <Target Name="SpecFlowFeatureSourceMapping" BeforeTargets="BeforeBuild">
    <AppendSpecFlowSourceMap Files="@(SpecFlowFeature)" OutputDirectory="$(TargetDir)">
      <Output TaskParameter="Results" PropertyName="_SpecFlowFeatureWithSourceMaps"/>
    </AppendSpecFlowSourceMap>
    
    <AppendSpecFlowSourceMap Files="@(SpecFlowEmbeddedFeature)" OutputDirectory="$(SpecFlowIntermediateOutputPath)">
      <Output TaskParameter="Results" PropertyName="_SpecFlowEmbeddedFeatureWithSourceMaps"/>
    </AppendSpecFlowSourceMap>

    <ItemGroup>
      <EmbeddedResource Include="$(_SpecFlowEmbeddedFeatureWithSourceMaps)">
        <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      </EmbeddedResource>
    </ItemGroup>
    
    <!-- Append to FileWrites so the file will be removed on clean -->
    <ItemGroup>
      <FileWrites Include="@(_SpecFlowFeatureWithSourceMaps)"/>
      <FileWrites Include="@(_SpecFlowEmbeddedFeatureWithSourceMaps)"/>
    </ItemGroup>
  </Target>

  <!--
  Coppies the feature file to the output directory and appends a line to the end of the feature file that is in the following format:
    #sourceMapping=C:\Source\File\Path.feature
  
  TODO:
  - If the file modified dates havent changes, consider not copying and appending to the file, and use the existing one.
  -->
  <UsingTask TaskName="AppendSpecFlowSourceMap" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup>
      <OutputDirectory Required="true" ParameterType="System.String" />
      <Files ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <!--<Results ParameterType="System.String[]" Output="true" />-->
      <Results ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
if (Files.Length > 0)
{
	Results = new TaskItem[Files.Length];
  
	Log.LogMessage(MessageImportance.Normal, "Appending SpecFlow SourceMappings:");
		
	for (int i = 0; i < Files.Length; i++)
	{
		var item = Files[i];
	  var outputPath = Path.Combine(OutputDirectory, item.ToString());
			
		Log.LogMessage(MessageImportance.Normal, "    " + outputPath);
    
		var inputPath = item.GetMetadata("FullPath");
	  var outputDirectory = Path.GetDirectoryName(outputPath);

	  if (!Directory.Exists(outputDirectory))
	  {
		  Log.LogMessage(MessageImportance.Low, "Creating directory:" + outputDirectory);
		  Directory.CreateDirectory(outputDirectory);
	  }
    
	  File.Copy(inputPath, outputPath, true);
	  File.AppendAllLines(outputPath, new[]
	  {
      Environment.NewLine,
		  String.Concat("#sourceMapping=", inputPath)
	  });
        
    Results[i] = new TaskItem(outputPath);
	}
}
]]>
      </Code>
    </Task>
  </UsingTask>
</Project>